#include <array>
#include <memory>
#include <stdio.h>
#include <string>
#include <vector>
#include <iostream>



#include "islandmanager.h"

IslandManager::IslandManager(){}
IslandManager::~IslandManager(){}

IslandManager& IslandManager::getInstance(){
    static IslandManager im;
    return im;
}

int IslandManager::launchIsland(){
    std::string a = this->exec("vboxmanage startvm Island");
    return 0;
}

std::string IslandManager::exec(std::string command){
    std::array<char, 128> buffer;
    std::vector<char[128]> resChunks;
    int outputLength = 0;
    std::shared_ptr<FILE> pipe(_popen(command.c_str(), "r"), pclose);
    if (!pipe) throw std::runtime_error("popen() failed!");
    while (!feof(pipe.get())) {
        if (fgets(buffer.data(), 128, pipe.get()) != nullptr){
            char chunk[128];
            memcpy(buffer.data(), &chunk, 128);
            resChunks.push_back(chunk);
            outputLength += buffer.size();            
        }
    }
    char result = [outputLength];

    return &result;
    
}


